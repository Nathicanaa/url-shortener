name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ master ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: europe-west1
  REPOSITORY: ${{ secrets.GCP_REPOSITORY }}
  SERVICE: ${{ secrets.GCP_APP_NAME }}
  REGION: europe-west1

jobs:
    deploy:
        if: contains(github.event.head_commit.message, '[cr_deploy]')

        permissions:
            contents: 'read'
            id-token: 'write'

        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v2

          - name: Google Auth
            id: auth
            uses: 'google-github-actions/auth@v0'
            with:
              credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

          - name: Docker Auth
            id: docker-auth
            uses: 'docker/login-action@v1'
            with:
              registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
              username: _json_key
              password: ${{ secrets.GCP_CREDENTIALS }}

          - name: Build and Push Container
            run: |-
              docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
              docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

          - name: Deploy to Cloud Run
            id: deploy
            uses: google-github-actions/deploy-cloudrun@v1
            with:
              service: ${{ env.SERVICE }}
              region: ${{ env.REGION }}
              image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
              timeout: 20
              env_vars: |
                LOGGING_LEVEL=INFO
                PSQL_NAME=${{ secrets.PSQL_NAME }}
                PSQL_PASSWORD=${{ secrets.PSQL_PASSWORD }}
                PSQL_HOST=${{ secrets.PSQL_HOST }}
                PSQL_PORT=${{ secrets.PSQL_PORT }}
                DATABASE_NAME=${{ secrets.DATABASE_NAME }}
              flags: |
                --platform managed
                --concurrency=20
                --cpu=1
                --max-instances=5
                --memory=512Mi
                --min-instances=0
                --add-cloudsql-instances=${{ secrets.SQL_INSTANCE }}
                --port 8000
                --allow-unauthenticated
